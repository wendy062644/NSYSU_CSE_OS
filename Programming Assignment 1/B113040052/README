clang B113040052.c -o B113040052 //編譯
./B113040052 //啟動

*** 程式測試時，沒有遇到什麼問題 ***

/.1. 輸入 exit 代表離開(return 0)。
	例如：	exit

2. 當連續輸入多個指令時，程式會先等前面的指令完成後，再接著下一個指令(使用fork())。
	例如：	sleep 10	//暫停10秒後，顯示ls內容，再暫停5秒後，顯示ls內容
		ls
		sleep 5
		ls

3. 當輸入的指令有參數時，需輸出對應的功能。
	例如：	ls -t		//輸入指令的參數時，會顯示對應的內容
		ls -l
		more --help

4. 當指令最後面是 & 時，則不用等待他完成，可以直接在background繼續運行。
	例如：	sleep 10 &		//在暫停10秒後面加上&的話，可以不用等暫停10秒結束即可馬上執行新指令
		ls -l

5. 當指令有 > 時，會將輸出內容輸出到「>」後的名稱，當有多個「>」時，會選擇最後一個名稱(如同terminal)。
	例如：	ls -l > test				//將 ls -l 的內容輸出到test中
		more --help > test2			//將 more --help 的內容輸出到test2中
		more --help > test2 > test3		//將 more --help 的內容輸出到test3中

6. 當指令有 < 時，會將輸入內容輸入到「<」後的名稱，當有多個「<」時，會選擇最後一個名稱(如同terminal)。
	例如：	sort < sort_test			//將sort_test的內容輸入到sort中
		sort < sort_test > result		//將sort_test的內容輸入到sort中，並輸出到result中

7. 當指令有 | 時，會將前者的輸出當作後者的輸入(目前10個為上限)。
   「需先輸入 clang add10.c -o add10 與 clang 45.c -o 45」
	例如：	./45 | ./add10 | ./add10 | ./add10	//先輸出45到add10中，再將add10輸出的內容輸入到add10中，最後輸出75
		./45 | ./add10 | ./45 | ./add10		//先輸出45到add10中，再將add10輸出的內容輸入到45中，45再輸出45到add10中，最後輸出55
		./45 | ./add10 | ./add10 > result	//先輸出45到add10中，再將add10輸出的內容輸入到add10中，最後輸出到result中，內容為65